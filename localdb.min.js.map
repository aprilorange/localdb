{"version":3,"sources":["localdb.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","arrayEachTrue","array","objectId","timestamp","Date","getTime","toString","replace","Math","random","toLowerCase","defaultOpts","limit","sortBy","sort","skip","definition","W","LS","LocalDB","name","type","arguments","undefined","this","db","opts","value","where","collection","JSON","parse","getItem","query","find","console","error","get","filter","obj","has","push","a","b","slice","index","_id","createdAt","updatedAt","override","setItem","stringify","removeItem","context","module","exports","window","localStorage"],"mappings":"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","file":"localdb.min.js","sourcesContent":["/*\r\n * localdb\r\n * (c) 2015\r\n * github.com/aprilorange/localdb\r\n */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n\n  var defaultOpts = { limit: 0, sortBy: 'index', sort: 1, skip: 0 };\n\n  var definition = function definition(W, LS) {\n    var LocalDB = (function () {\n      function LocalDB(name) {\n        var type = arguments.length <= 1 || arguments[1] === undefined ? 'Array' : arguments[1];\n        var timestamp = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n        _classCallCheck(this, LocalDB);\n\n        if (typeof name === 'string') {\n          this.db = name;\n          this.type = type;\n          this.timestamp = timestamp;\n        } else if (typeof name === 'object') {\n          var opts = name;\n          this.db = opts.name;\n          this.type = opts.type || 'Array';\n          this.timestamp = opts.timestamp || false;\n        }\n      }\n\n      _createClass(LocalDB, [{\n        key: 'get',\n        value: function get(where) {\n          // where maps to key or index, depending on the type if Object or Array\n          var collection = JSON.parse(LS.getItem(this.db));\n          if (!where) return collection;else if (typeof collection === 'undefined' || !collection) return null;else return collection[where];\n        }\n      }, {\n        key: 'findOne',\n        value: function findOne(query) {\n          return this.find(query, {\n            limit: 1\n          });\n        }\n      }, {\n        key: 'find',\n        value: function find(query) {\n          var opts = arguments.length <= 1 || arguments[1] === undefined ? defaultOpts : arguments[1];\n\n          if (this.type !== 'Array') {\n            return console.error('The .findOne method only works if the database is an Array!');\n          }\n\n          opts.limit = opts.limit || defaultOpts.limit;\n          opts.sortBy = opts.sortBy || defaultOpts.sortBy;\n          opts.sort = opts.sort || defaultOpts.sort;\n          opts.skip = opts.skip || defaultOpts.skip;\n\n          var collection = this.get() || [];\n          if (query) {\n            collection = collection.filter(function (obj) {\n              var has = [];\n              for (var key in query) {\n                has.push(obj[key] === query[key]);\n              }\n              if (arrayEachTrue(has)) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n          }\n          if (opts.limit === 1 && opts.skip === 0) {\n            return collection[0];\n          } else {\n\n            collection = collection.sort(function (a, b) {\n              if (a[opts.sortBy] < b[opts.sortBy]) {\n                return -opts.sort;\n              } else if (a[opts.sortBy] > b[opts.sortBy]) {\n                return opts.sort;\n              } else {\n                return 0;\n              }\n            });\n\n            if (opts.limit === 0) {\n              return collection.slice(opts.skip);\n            } else {\n              return collection.slice(opts.skip, opts.limit + opts.skip);\n            }\n          }\n        }\n      }, {\n        key: 'add',\n        value: function add(obj) {\n          if (this.type !== 'Array') {\n            console.error('The .add method only works if the database is an Array!');\n          }\n          var collection = this.get() || [];\n          var index = 0;\n          if (collection.length > 0) {\n            index = collection.length;\n          }\n          obj.index = index;\n          obj._id = objectId();\n          if (this.timestamp) {\n            obj.createdAt = new Date();\n            obj.updatedAt = new Date();\n          }\n          collection.push(obj);\n          this.override(collection);\n          return this;\n        }\n      }, {\n        key: 'set',\n        value: function set(key, value) {\n          // works if db is object\n          if (this.type !== 'Object') {\n            console.error('The .set method only works if the database is an Object!');\n          } else {\n            var collection = this.get() || {};\n            collection[key] = value;\n            this.override(collection);\n          }\n          return this;\n        }\n      }, {\n        key: 'save',\n        value: function save(obj) {\n          if (this.type !== 'Array') {\n            console.error('The .save method only works if the database is an Array!');\n          }\n          var collection = this.get();\n          if (collection[obj.index]._id === obj._id) {\n            collection[obj.index] = obj;\n            this.override(collection);\n          }\n          return this;\n        }\n      }, {\n        key: 'override',\n        value: function override(collection) {\n          LS.setItem(this.db, JSON.stringify(collection));\n        }\n      }, {\n        key: 'remove',\n        value: function remove(key, value) {\n          var collection = this.get();\n\n          if (this.type === 'Array') {\n            if (collection.length === 0) {\n              return this;\n            }\n            collection = collection.filter(function (obj) {\n              if (obj[key] === value) {\n                return false;\n              } else {\n                return true;\n              }\n            });\n          } else if (this.type === 'Object') {\n            delete collection[key];\n          }\n\n          LS.setItem(this.db, JSON.stringify(collection));\n          return this;\n        }\n      }, {\n        key: 'destroy',\n        value: function destroy() {\n          LS.removeItem(this.db);\n          return this;\n        }\n      }]);\n\n      return LocalDB;\n    })();\n\n    return LocalDB;\n  };\n\n  function arrayEachTrue(array) {\n    for (var i = 0; i < array.length; i++) {\n      if (!array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function objectId() {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function () {\n      return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n  }\n\n  ;(function (context, name, definition) {\n    if (typeof module !== 'undefined') {\n      module.exports = definition;\n    } else if (typeof context !== 'undefined') {\n      context[name] = definition;\n    }\n  })(window, 'localdb', definition(window, window.localStorage));\n})();"],"sourceRoot":"/source/"}